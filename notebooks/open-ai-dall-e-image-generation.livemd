# OpenAI DALL-E Image Generation

```elixir
Mix.install([
  {:langchain, github: "brainlid/langchain"},
  # {:langchain, "~> 0.2.0"},
  {:kino, "~> 0.12.0"}
])
```

## Generate an Image

This generates an image using DALL-E 3 and displays it.

First, we'll define the prompt to use for our image.

```elixir
prompt =
  "Create a photo of a well-loved, adorable and cuddly stuffed bear sitting on a bed. The room is lit by golden hour sunlight from a window, creating a beautiful and nostalgic scene."
```

Let's make sure we are using our OpenAI API key. You can manage that in your Livebook secrets.

```elixir
Application.put_env(:langchain, :openai_key, System.fetch_env!("LB_OPENAI_API_KEY"))
```

Now, let's make the request for our new image!

```elixir
alias LangChain.Images.OpenAIImage

{:ok, [image]} =
  %{
    model: "dall-e-3",
    prompt: prompt,
    response_format: "b64_json",
    size: "1024x1024"
  }
  |> OpenAIImage.new!()
  |> OpenAIImage.call()
```

This returned an image in the form of a `%GenerateImage{}`. We can easily display the Base64 encoded image data here:

```elixir
image.content |> Base.decode64!()
```

Awesome!

The generated image can be returned as a URL or base64 encoded text. You can use the `LangChain.Images` module for functions to make downloading the file easy.

<!-- livebook:{"offset":1311,"stamp":{"token":"XCP.c5cNrnpNydYEp9pu0GIZIvX8UwUQhHoh2kcoWdbBq-0DzZG6hZ-R40LCtUxt2r58vbFWxZd8O34zbHC_JXBgLjuuaH7BKBBXfu1mQpFZ4FbxRVqBAvlPlm0","version":2}} -->
